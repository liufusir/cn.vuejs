import{_ as d,c as i,o as t,ak as e,j as h,ag as l,a as p}from"./chunks/framework.Dh1aqFNe.js";const k={class:"demo"},r=JSON.parse('{"title":"自定义指令 ​","description":"","frontmatter":{},"headers":[],"relativePath":"guide/reusability/custom-directives.md","filePath":"guide/reusability/custom-directives.md"}'),c={name:"guide/reusability/custom-directives.md"},v=Object.assign(c,{setup(b){const n={mounted:s=>{s.classList.add("is-highlight")}};return(s,a)=>(t(),i("div",null,[a[1]||(a[1]=e(`<h1 id="custom-directives" tabindex="-1" data-v-3c3e52b9>自定义指令 ​ <a class="header-anchor" href="#custom-directives" aria-label="Permalink to &quot;自定义指令 ​{#custom-directives}&quot;" data-v-3c3e52b9>​</a></h1><h2 id="introduction" tabindex="-1" data-v-3c3e52b9>介绍 <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;介绍 {#introduction}&quot;" data-v-3c3e52b9>​</a></h2><p data-v-3c3e52b9>除了 Vue 内置的一系列指令 (比如 <code data-v-3c3e52b9>v-model</code> 或 <code data-v-3c3e52b9>v-show</code>) 之外，Vue 还允许你注册自定义的指令 (Custom Directives)。</p><p data-v-3c3e52b9>我们已经介绍了两种在 Vue 中重用代码的方式：<a href="https://cn.vuejs.org/guide/essentials/component-basics.html" target="_blank" rel="noreferrer" data-v-3c3e52b9>组件</a>和<a href="https://cn.vuejs.org/guide/reusability/composables.html" target="_blank" rel="noreferrer" data-v-3c3e52b9>组合式函数</a>。组件是主要的构建模块，而组合式函数则侧重于有状态的逻辑。另一方面，自定义指令主要是为了重用涉及普通元素的底层 DOM 访问的逻辑。</p><p data-v-3c3e52b9>一个自定义指令由一个包含类似组件生命周期钩子的对象来定义。钩子函数会接收到指令所绑定元素作为其参数。下面是一个自定义指令的例子，当 Vue 将元素插入到 DOM 中后，该指令会将一个 class 添加到元素中：</p><div class="language-vue vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>// 在模板中启用 v-highlight</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-3c3e52b9> vHighlight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    mounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>        el.classList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;is-highlight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>);</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    },</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>};</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span>
<span class="line" data-v-3c3e52b9></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> v-highlight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;This sentence is important!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span></code></pre></div>`,6)),h("div",k,[l((t(),i("p",null,a[0]||(a[0]=[p("This sentence is important!")]))),[[n]])]),a[2]||(a[2]=e(`<p data-v-3c3e52b9>在 <code data-v-3c3e52b9>&lt;script setup&gt;</code> 中，任何以 v 开头的驼峰式命名的变量都可以当作自定义指令使用。在上述例子中，<code data-v-3c3e52b9>vHighlight</code> 可以在模板中以 <code data-v-3c3e52b9>v-highlight</code> 的形式使用。</p><p data-v-3c3e52b9>在不使用 <code data-v-3c3e52b9>&lt;script setup&gt;</code> 的情况下，自定义指令需要通过 <code data-v-3c3e52b9>directives</code> 选项注册：</p><div class="language-js vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>() {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>        /*...*/</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    },</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    directives: {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>        // 在模板中启用 v-highlight</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>        highlight: {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>            /* ... */</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>        },</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    },</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>};</span></span></code></pre></div><p data-v-3c3e52b9>将一个自定义指令全局注册到应用层级也是一种常见的做法：</p><div class="language-js vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-3c3e52b9> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> createApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>({});</span></span>
<span class="line" data-v-3c3e52b9></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>// 使 v-highlight 在所有组件中都可用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>directive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;highlight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    /* ... */</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>});</span></span></code></pre></div><h2 id="custom-directives.html#when-to-use" tabindex="-1" data-v-3c3e52b9>自定义指令的使用时机 <a class="header-anchor" href="#custom-directives.html#when-to-use" aria-label="Permalink to &quot;自定义指令的使用时机 {#custom-directives.html#when-to-use}&quot;" data-v-3c3e52b9>​</a></h2><p data-v-3c3e52b9>只有当所需功能只能通过直接的 DOM 操作来实现时，才应该使用自定义指令。</p><p data-v-3c3e52b9>一个常见例子是使元素获取焦点的 <code data-v-3c3e52b9>v-focus</code> 指令。</p><div class="language-vue vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>// 在模板中启用 v-focus</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-3c3e52b9> vFocus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    mounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> el.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(),</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>};</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span>
<span class="line" data-v-3c3e52b9></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> v-focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> /&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span></code></pre></div><p data-v-3c3e52b9>该指令比 <code data-v-3c3e52b9>autofocus</code> 属性更有用，因为它不仅在页面加载时有效，而且在 Vue 动态插入元素时也有效！</p><p data-v-3c3e52b9>建议尽可能使用 <code data-v-3c3e52b9>v-bind</code> 等内置指令声明模板，因为它们更高效，对服务端渲染也更友好。</p><h2 id="hook" tabindex="-1" data-v-3c3e52b9>指令钩子 ​ <a class="header-anchor" href="#hook" aria-label="Permalink to &quot;指令钩子 ​{#hook}&quot;" data-v-3c3e52b9>​</a></h2><p data-v-3c3e52b9>一个指令的定义对象可以提供几种钩子函数 (都是可选的)：</p><div class="language-js vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-3c3e52b9> myDirective</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 在绑定元素的 attribute 前</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 或事件监听器应用前调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    created</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>vnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>        // 下面会介绍各个参数的细节</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    },</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 在元素被插入到 DOM 前调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    beforeMount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>vnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) {},</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 在绑定元素的父组件</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 及他自己的所有子节点都挂载完成后调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    mounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>vnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) {},</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 绑定元素的父组件更新前调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    beforeUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>vnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>prevVnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) {},</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 在绑定元素的父组件</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 及他自己的所有子节点都更新后调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    updated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>vnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>prevVnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) {},</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 绑定元素的父组件卸载前调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    beforeUnmount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>vnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) {},</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 绑定元素的父组件卸载后调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>    unmounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>vnode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) {},</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>};</span></span></code></pre></div><h2 id="hook-arguments" tabindex="-1" data-v-3c3e52b9>钩子参数 ​ <a class="header-anchor" href="#hook-arguments" aria-label="Permalink to &quot;钩子参数 ​{#hook-arguments}&quot;" data-v-3c3e52b9>​</a></h2><p data-v-3c3e52b9>指令的钩子会传递以下几种参数：</p><ul data-v-3c3e52b9><li data-v-3c3e52b9><p data-v-3c3e52b9><code data-v-3c3e52b9>el</code>：指令绑定到的元素。这可以用于直接操作 DOM。</p></li><li data-v-3c3e52b9><p data-v-3c3e52b9><code data-v-3c3e52b9>binding</code>：一个对象，包含以下属性。</p><ul data-v-3c3e52b9><li data-v-3c3e52b9><code data-v-3c3e52b9>value</code>：传递给指令的值。例如在 <code data-v-3c3e52b9>v-my-directive=&quot;1 + 1&quot;</code> 中，值是 2。</li><li data-v-3c3e52b9><code data-v-3c3e52b9>oldValue</code>：之前的值，仅在 <code data-v-3c3e52b9>beforeUpdate</code> 和 <code data-v-3c3e52b9>updated</code> 中可用。无论值是否更改，它都可用。</li><li data-v-3c3e52b9><code data-v-3c3e52b9>arg</code>：传递给指令的参数 (如果有的话)。例如在 <code data-v-3c3e52b9>v-my-directive:foo</code> 中，参数是 <code data-v-3c3e52b9>&quot;foo&quot;</code>。</li></ul></li><li data-v-3c3e52b9><p data-v-3c3e52b9><code data-v-3c3e52b9>modifiers</code>：一个包含修饰符的对象 (如果有的话)。例如在 <code data-v-3c3e52b9>v-my-directive.foo.bar</code> 中，修饰符对象是 <code data-v-3c3e52b9>{ foo: true, bar: true }</code>。</p><ul data-v-3c3e52b9><li data-v-3c3e52b9><code data-v-3c3e52b9>instance</code>：使用该指令的组件实例。</li><li data-v-3c3e52b9><code data-v-3c3e52b9>dir</code>：指令的定义对象。</li></ul></li><li data-v-3c3e52b9><p data-v-3c3e52b9>vnode：代表绑定元素的底层 VNode。</p></li><li data-v-3c3e52b9><p data-v-3c3e52b9>prevVnode：代表之前的渲染中指令所绑定元素的 VNode。仅在 <code data-v-3c3e52b9>beforeUpdate</code> 和 <code data-v-3c3e52b9>updated</code> 钩子中可用。</p></li></ul><p data-v-3c3e52b9>举例来说，像下面这样使用指令：</p><div class="language-template vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> v-example</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>baz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span></code></pre></div><p data-v-3c3e52b9><code data-v-3c3e52b9>binding</code> 参数会是一个这样的对象：</p><div class="language-js vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>{</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>  arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&#39;foo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>,</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>  modifiers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-3c3e52b9>true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> },</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>  value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>/* \`baz\` 的值 */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>,</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>  oldValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>/* 上一次更新时 \`baz\` 的值 */</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>}</span></span></code></pre></div><p data-v-3c3e52b9>和内置指令类似，自定义指令的参数也可以是动态的。举例来说：</p><div class="language-template vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> v-example</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>:[arg]=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span></code></pre></div><p data-v-3c3e52b9>这里指令的参数会基于组件的 <code data-v-3c3e52b9>arg</code> 数据属性响应式地更新。</p><div class="tip custom-block" data-v-3c3e52b9><p class="custom-block-title" data-v-3c3e52b9>Note</p><p data-v-3c3e52b9>除了 el 外，其他参数都是只读的，不要更改它们。若你需要在不同的钩子间共享信息，推荐通过元素的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset" target="_blank" rel="noreferrer" data-v-3c3e52b9>dataset</a> attribute 实现。</p></div><h2 id="shorthands" tabindex="-1" data-v-3c3e52b9>简化形式 ​ <a class="header-anchor" href="#shorthands" aria-label="Permalink to &quot;简化形式 ​{#shorthands}&quot;" data-v-3c3e52b9>​</a></h2><p data-v-3c3e52b9>对于自定义指令来说，一个很常见的情况是仅仅需要在 <code data-v-3c3e52b9>mounted</code> 和 <code data-v-3c3e52b9>updated</code> 上实现相同的行为，除此之外并不需要其他钩子。这种情况下我们可以直接用一个函数来定义指令，如下所示：</p><div class="language-template vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> v-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>color</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>directive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>    // 这会在 \`mounted\` 和 \`updated\` 时都调用</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    el.style.color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> binding.value;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>});</span></span></code></pre></div><h2 id="object-literals" tabindex="-1" data-v-3c3e52b9>对象字面量 <a class="header-anchor" href="#object-literals" aria-label="Permalink to &quot;对象字面量 {#object-literals}&quot;" data-v-3c3e52b9>​</a></h2><p data-v-3c3e52b9>如果你的指令需要多个值，你可以向它传递一个 JavaScript 对象字面量。别忘了，指令也可以接收任何合法的 JavaScript 表达式。</p><div class="language-template vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> v-demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>{ color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&#39;white&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&#39;hello!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> }</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>directive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-3c3e52b9>binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-3c3e52b9>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> {</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(binding.value.color); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>// =&gt; &quot;white&quot;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9>log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>(binding.value.text); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>// =&gt; &quot;hello!&quot;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>});</span></span></code></pre></div><h2 id="using-on-components" tabindex="-1" data-v-3c3e52b9>在组件上使用 ​ <a class="header-anchor" href="#using-on-components" aria-label="Permalink to &quot;在组件上使用 ​{#using-on-components}&quot;" data-v-3c3e52b9>​</a></h2><div class="warning custom-block" data-v-3c3e52b9><p class="custom-block-title" data-v-3c3e52b9>不推荐</p><p data-v-3c3e52b9>不推荐在组件上使用自定义指令。当组件具有多个根节点时可能会出现预期外的行为。</p></div><p data-v-3c3e52b9>当在组件上使用自定义指令时，它会始终应用于组件的根节点，和<a href="https://cn.vuejs.org/guide/components/attrs.html" target="_blank" rel="noreferrer" data-v-3c3e52b9>透传 attributes</a> 类似。</p><div class="language-template vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>MyComponent</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-3c3e52b9> v-demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-3c3e52b9>&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9> /&gt;</span></span></code></pre></div><div class="language-template vp-adaptive-theme" data-v-3c3e52b9><button title="复制代码" class="copy" data-v-3c3e52b9></button><span class="lang" data-v-3c3e52b9>template</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-3c3e52b9><code data-v-3c3e52b9><span class="line" data-v-3c3e52b9><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-3c3e52b9>&lt;!-- MyComponent 的模板 --&gt;</span></span>
<span class="line" data-v-3c3e52b9></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt; &lt;!-- v-demo 指令会被应用在此处 --&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>  &lt;span&gt;My component content&lt;/span&gt;</span></span>
<span class="line" data-v-3c3e52b9><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;" data-v-3c3e52b9>div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-3c3e52b9>&gt;</span></span></code></pre></div><p data-v-3c3e52b9>需要注意的是组件可能含有多个根节点。当应用到一个多根组件时，指令将会被忽略且抛出一个警告。和 attribute 不同，指令不能通过 <code data-v-3c3e52b9>v-bind=&quot;$attrs&quot;</code> 来传递给一个不同的元素。</p>`,39))]))}}),g=d(v,[["__scopeId","data-v-3c3e52b9"]]);export{r as __pageData,g as default};
